use std::path::Path;
use rsp2_array_types::V3;
use rsp2_structure::Coords;

fn read_poscar(path: &Path) -> Coords {
    let file = std::fs::File::open(path).unwrap();
    let file = std::io::BufReader::new(file);
    rsp2_structure_io::Poscar::from_reader(file).unwrap().coords
}


// This file was autogenerated by `crates gen`. Do not edit!
fn main() {
    let mut args = std::env::args();
    args.next();

    let a = read_poscar(args.next().unwrap().as_ref());
    let carts = a.to_carts();
    let lower = &carts[..carts.len()/2];
    let min = lower.iter().map(|v| v[2]).fold(std::f64::INFINITY, f64::min);
    let max = lower.iter().map(|v| v[2]).fold(-std::f64::INFINITY, f64::max);
    let avg = lower.iter().map(|v| v[2]).fold(0.0, std::ops::Add::add) / lower.len() as f64;
    println!("{}, {}, {}", min, max, avg);
}
