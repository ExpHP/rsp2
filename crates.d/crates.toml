# Master config file for crates in this workspace.
#
# This is a homegrown solution (I'm sorry) to a number of
# annoying problems with using workspaces. Cargo.toml files
# in this workspace are generated from source files that
# contain lines like this:
#
#     !!rsp2-assert-close
#     !!itertools
#
# When you run the following command in the workspace root:
#
#     ./crates gen
#
# Cargo.toml files are created with those lines expanded to e.g.
#
#     rsp2-assert-close = { path = "../../util/assert-close" }
#     itertools = "0.7"
#
# based on metadata in this file.

#--------------------------------------------
# Which crate represents the workspace?
root = "rsp2"

#--------------------------------------------
# Specification of all crates in the workspace and their
# paths relative to the root. The 'crates' script uses this
# information to generate the necessary relative paths
# to include when one crate in the workspace depends on
# another.
[crates]
rsp2                = "."
rsp2-lammps-wrap    = "src/io/lammps"
rsp2-tasks          = "src/tasks"
rsp2-minimize       = "src/minimize"
rsp2-phonopy-io     = "src/io/phonopy"
rsp2-array-utils    = "src/util/array"
rsp2-assert-close   = "src/util/assert-close"
rsp2-structure      = "src/structure"
rsp2-structure-io   = "src/io/structure"
rsp2-slice-math     = "src/util/slice-math"
rsp2-util-macros    = "src/util/macros"
rsp2-fs-util        = "src/util/fs"
rsp2-clap           = "src/util/clap"
rsp2-tasks-config   = "src/tasks/config"
rsp2-array-types    = "src/util/array-types"
rsp2-linalg         = "src/linalg"
rsp2-integration-test = "src/util/integration-test"
rsp2-soa-ops        = "src/util/soa-ops"
rsp2-newtype-indices = "src/util/newtype-indices"
rsp2-python         = "src/python"
rsp2-potentials     = "src/potentials"
#!!INSERTION POINT FOR NEW CRATES!!#

#--------------------------------------------
# Versions for external dependencies, so that we don't have
# to look a whole bunch of them up every single time we make
# a new crate in the workspace.
#
# This also makes it easier to migrate the entire workspace
# to a new version of a dependency.
[preferred-versions]
byte-tools = "0.2.0"
clap = "2"
chrono = "0.4"
either = "1"
fern = { version = "0.5", features = ["colored"] }
env_logger = "0.5.10"
extension-trait = "0.1.2"
failure = "0.1.2"
itertools = "0.7"
lazy_static = "0.2"
log = "0.4"
nom = "3"
num-traits = "0.2.3"
num-integer = "0.1"
ordered-float = "1.0"
petgraph = "0.4"
rand = "0.3"
serde = { version = "1.0.88", features = ["rc"] }
serde_derive = "1.0.88"
serde_json = "1"
serde_yaml = "0.7"
serde_ignored = "0.0.4"
tempdir = "0.3"
ansi_term = "0.10"
slice-of-array = "0.2.1"
rsp2-kets = { version = "0.3.6", git = "https://github.com/ExpHP/rsp2-kets", features = ["serde"] }
#rsp2-kets = { path = "/home/lampam/cpp/other/rust/rsp2-kets" }
#lammps-sys = { branch = "master", git = "https://github.com/ExpHP/lammps-sys" }
#lammps-sys = { path = "/home/lampam/cpp/other/rust/lammps-sys" }
lammps-sys = { rev = "6bba3ad", git = "https://github.com/ExpHP/lammps-sys" }
rayon = "1.0.1"
vasp-poscar = "0.1.1"
path_abs = "0.4.1"
enum-map = "0.4.1"
frunk = "0.2.0"
shlex = "0.1.1"
indoc = "0.2.3"
lapacke = "0.1.4"
lapack-src = { version = "0.1.4", features = ["openblas"] }
ndarray = "0.11.2"
rustc-test = "0.3.0"
pretty_assertions = "0.5.1"
mpi = "0.5.4"
num_cpus = "1.8"
libffi-sys = "0.6.2"
include_dir = "0.2.1"
walkdir = "2"
vergen = "2"
stack = "0.3"
xz2 = "0.1.6"
objekt = "0.1.1"
rayon-cond = "0.1.0"

#--------------------------------------------
# Always optimize some crates when they appear as dependencies.
#
# Choose crates that contain monomorphized instances of code that is critical
# to efficiency. (`pub` generic functions will generally not benefit from the
# feature).
#
# This depends on a cargo nightly feature, so support must be explicitly
# enabled for it in .crates.d/config.toml
[always-optimize]
rsp2-kets = 3
rsp2-array-utils = 3
rsp2-array-types = 3
rsp2-structure = 3
